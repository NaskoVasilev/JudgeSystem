<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<software-distribution project="MinGW" home="http://www.mingw.org" issue="2019070600">

  <!-- File: mingw32-runtime.xml ~~ mingw-get package description for MinGW API -->

  <package-collection subsystem="mingw32">
    <download-host uri="http://osdn.net/dl/mingw/%F" />

    <!-- Provides the package descriptions for each of the two primary    -->
    <!-- packages, which comprise the standard MinGW Runtime Library API, -->
    <!-- namely mingwrt and w32api.                                       -->

    <package name="mingw32-wsl-features" alias="wsl-features">
      <affiliate group="MinGW Compiler Suite" />
      <affiliate group="MinGW Standard Libraries" />
      <description lang="en" title="MinGW Runtime Library Configuration Support">
        <paragraph>
          This package provides an auto-update hook for MinGW's user-supplied
          &lt;features.h&gt; header file.  Subject to the user-supplied header
          conforming to stipulated formatting conventions, the post-installation
          hook will merge new features specifications into the user-supplied
          file, while preserving all existing content, and features selections,
          as already specified by the user.
        </paragraph>
        <paragraph>
          In the event that no &lt;features.h&gt; header file yet exists, the
          post-installation hook will simply install a suitably formatted,
          pre-configured default header file.
        </paragraph>
      </description>

      <source tarname="mingwrt-*-mingw32-src.tar" />
      <licence tarname="mingwrt-*-mingw32-lic.tar" />

      <component class="cfg">
        <release tarname="wsl-features-20190122-1-mingw32-cfg.tar.xz" />
        <action class="post-install">
          sysroot = os.getenv( "MINGW32_SYSROOT" )
          package.path = sysroot.."/var/lib/wsl/?.lua;"..package.path
          have_features, config = pcall( require, "features" )
          if have_features
          then
            config.update( io.open( config.pathname(), "w" ) )
          end
        </action>
      </component>
    </package>

    <package name="mingw32-mingwrt" alias="mingwrt mingw-runtime">
      <affiliate group="MinGW Compiler Suite" />
      <affiliate group="MinGW Standard Libraries" />
      <description lang="en" title="The MinGW Runtime Library API">
        <paragraph>
          This package provides the header files, system object modules,
          dynamic link libraries, import libraries and static libraries
          which constitute the standard MinGW Runtime API.
        </paragraph>
        <paragraph>
          This is a required component of the MinGW Compiler Suite.
        </paragraph>
      </description>

      <source tarname="mingwrt-%-mingw32-src.tar.%" />
      <licence tarname="mingwrt-%-mingw32-lic.tar.%" />

      <component class="dev">
        <requires eq="mingwrt-%-mingw32-dll.tar" />
        <requires eq="wsl-features-*-mingw32-cfg.tar" />
        <release tarname="mingwrt-5.2.2-mingw32-dev.tar.xz" />
        <release tarname="mingwrt-5.2.1-mingw32-dev.tar.xz" />
        <release tarname="mingwrt-5.2-mingw32-dev.tar.xz" />
        <release tarname="mingwrt-5.1.1-mingw32-dev.tar.xz" />
        <release tarname="mingwrt-5.1-mingw32-dev.tar.xz" />
        <release tarname="mingwrt-5.0.2-mingw32-dev.tar.xz" />
      </component>

      <component class="dll">
        <release tarname="mingwrt-5.2.2-mingw32-dll.tar.xz" />
        <release tarname="mingwrt-5.2.1-mingw32-dll.tar.xz" />
        <release tarname="mingwrt-5.2-mingw32-dll.tar.xz" />
        <release tarname="mingwrt-5.1.1-mingw32-dll.tar.xz" />
        <release tarname="mingwrt-5.1-mingw32-dll.tar.xz" />
        <release tarname="mingwrt-5.0.2-mingw32-dll.tar.xz" />
      </component>

      <component class="lic">
        <release tarname="mingwrt-5.2.2-mingw32-lic.tar.xz" />
        <release tarname="mingwrt-5.2.1-mingw32-lic.tar.xz" />
        <release tarname="mingwrt-5.2-mingw32-lic.tar.xz" />
        <release tarname="mingwrt-5.1.1-mingw32-lic.tar.xz" />
        <release tarname="mingwrt-5.1-mingw32-lic.tar.xz" />
        <release tarname="mingwrt-5.0.2-mingw32-lic.tar.xz" />
      </component>

      <component class="man">
        <release tarname="mingwrt-5.2.2-mingw32-man.tar.xz" />
        <release tarname="mingwrt-5.2.1-mingw32-man.tar.xz" />
        <release tarname="mingwrt-5.2-mingw32-man.tar.xz" />
        <release tarname="mingwrt-5.1.1-mingw32-man.tar.xz" />
        <release tarname="mingwrt-5.1-mingw32-man.tar.xz" />
        <release tarname="mingwrt-5.0.2-mingw32-man.tar.xz" />
      </component>
    </package>

    <package name="mingw32-libmingwex" alias="libmingwex" >
      <affiliate group="MinGW Compiler Suite" />
      <affiliate group="MinGW Standard Libraries" />
      <description lang="en" title="The MinGW Runtime Library API">
        <paragraph>
          This package provides an alternative implementation of the
          MinGW libraries, to support dynamic linking of the principal
          non-Microsoft components of the MinGW Runtime API.
        </paragraph>
        <paragraph>
          This is an optional component of the MinGW Compiler Suite.
        </paragraph>
      </description>

      <source tarname="mingwrt-%-mingw32-src.tar.%" />
      <licence tarname="mingwrt-%-mingw32-lic.tar.%" />

      <component class="dev">
        <requires eq="mingwrt-%-mingw32-dev.tar" />
        <release tarname="libmingwex-5.2.2-mingw32-dev.tar.xz">
          <requires eq="libmingwex-%-mingw32-dll-2.tar" />
        </release>
        <release tarname="libmingwex-5.2.1-mingw32-dev.tar.xz">
          <requires eq="libmingwex-%-mingw32-dll-2.tar" />
        </release>
        <release tarname="libmingwex-5.2-mingw32-dev.tar.xz">
          <requires eq="libmingwex-%-mingw32-dll-2.tar" />
        </release>
        <release tarname="libmingwex-5.1.1-mingw32-dev.tar.xz">
          <requires eq="libmingwex-%-mingw32-dll-0.tar" />
        </release>
        <release tarname="libmingwex-5.1-mingw32-dev.tar.xz">
          <requires eq="libmingwex-%-mingw32-dll-0.tar" />
        </release>
        <release tarname="libmingwex-5.0.2-mingw32-dev.tar.xz">
          <requires eq="libmingwex-%-mingw32-dll-0.tar" />
        </release>
      </component>

      <component class="dll">
        <release tarname="libmingwex-5.2.2-mingw32-dll-2.tar.xz" />
        <release tarname="libmingwex-5.2.1-mingw32-dll-2.tar.xz" />
        <release tarname="libmingwex-5.2-mingw32-dll-2.tar.xz" />
        <release tarname="libmingwex-5.1.1-mingw32-dll-0.tar.xz" />
        <release tarname="libmingwex-5.1-mingw32-dll-0.tar.xz" />
        <release tarname="libmingwex-5.0.2-mingw32-dll-0.tar.xz" />
      </component>
    </package>

    <package name="mingw32-w32api" alias="w32api">
      <affiliate group="MinGW Compiler Suite" />
      <affiliate group="MinGW Standard Libraries" />
      <description lang="en" title="The MinGW API for 32-Bit MS-Windows">
        <paragraph>
          This package provides the header files, and import libraries
          constituting a standard API for the development of applications
          which utilise the capabilities of the 32-bit MS-Windows system
          dynamic link libraries.
        </paragraph>
        <paragraph>
          This is a required component of the MinGW Compiler Suite.
        </paragraph>
      </description>

      <source tarname="w32api-%-mingw32-src.tar.%" />
      <licence tarname="mingwrt-%-mingw32-lic.tar.%" />

      <component class="dev">
        <release tarname="w32api-5.2.2-mingw32-dev.tar.xz" />
        <release tarname="w32api-5.2.1-mingw32-dev.tar.xz" />
        <release tarname="w32api-5.2-mingw32-dev.tar.xz" />
        <release tarname="w32api-5.1.1-mingw32-dev.tar.xz" />
        <release tarname="w32api-5.1-mingw32-dev.tar.xz" />
        <release tarname="w32api-5.0.2-mingw32-dev.tar.xz" />
      </component>
    </package>

  </package-collection>
</software-distribution>
<!-- vim: set nocompatible expandtab fileformat=unix textwidth=80 tabstop=2 shiftwidth=2: -->
