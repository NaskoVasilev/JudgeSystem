@inject IViewLocalizer Localizer
@model ContestAllResultsViewModel

@{
    ViewData["Title"] = Model.Name;
}

<h2 class="text-center mb-4">@Localizer["Results for contest"] "@Model.Name"</h2>

<table class="table table-striped w-100 table-responsive-sm table-bordered text-center mx-auto">
    <thead>
        <tr>
            <th class="text-center">&#8470;</th>
            <th class="text-center">@Localizer["Class"]</th>
            <th class="text-center">@Localizer["Full name"]</th>
            @foreach (var problem in Model.Problems)
            {
                <th class="text-center">
                    @problem.Name
                    @if (problem.IsExtraTask)
                    {
                        <span class="text-success ml-2 font-size-10"><i class="fas fa-star"></i></span>
                    }
                </th>
            }
            <th class="text-center">@Localizer["Total"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var contestResult in Model.ContestResults)
        {
            <tr>
                <td class="text-center">@contestResult.Student.NumberInCalss</td>
                <td class="text-center">@contestResult.Student.ClassName</td>
                <td class="text-center">
                    @if (User.IsInRole(GlobalConstants.AdministratorRoleName))
                    {
                        <a target="_blank" class="text-dark"
                           asp-area="@GlobalConstants.AdministrationArea"
                           asp-controller="Contest"
                           asp-action="Submissions"
                           asp-route-contestId="@Model.Id"
                           asp-route-userId="@contestResult.UserId">
                            @contestResult.Student.FullName
                        </a>
                    }
                    else
                    {
                        @contestResult.Student.FullName
                    }
                </td>
                @foreach (var problemId in Model.ProblemIds)
                {
                    int points = 0;
                    int maxPoints = Model.Problems.First(x => x.Id == problemId).MaxPoints;
                    if (contestResult.PointsByProblem.ContainsKey(problemId))
                    {
                        points = contestResult.PointsByProblem[problemId];
                    }
                    <td class="text-center w-auto">@points/@maxPoints</td>
                }
                <td class="text-center">@contestResult.Total/@Model.Problems.Sum(x => x.MaxPoints)</td>
            </tr>
        }
    </tbody>
</table>

<partial name="_ServerSidePaginationPartial" model="Model.PaginationData" />

@section Scripts{
    <script src="~/js/pagination.js"></script>
    <script>
		let url = "@Model.PaginationData.Url";
		let numberOfPagesUrl = "/Contest/Results/@Model.Id/PagesCount";
		InitializePaginationList(url, numberOfPagesUrl)
    </script>
}

