@model LessonViewModel

@{
	this.ViewData["Title"] = Model.Name;
	int problemNumber = 0;
}

<h2>@Model.Name</h2>
<div class="ul-holder">
	<h4>Downlaod resources</h4>
	<ul class="list-group d-flex flex-xl-row flex-wrap">
		@foreach (var resource in Model.Resources)
		{
			<li class="list-group-item a-holder">
				<a asp-area="" asp-controller="Resource" asp-action="Download" asp-route-id="@resource.Id">@resource.Name</a>
			</li>
		}
		<li class="list-group-item a-holder">
			<a asp-area="@GlobalConstants.AdministrationArea" asp-controller="Resource"
			   asp-action="Create" asp-route-lessonId="@Model.Id">Add Resource</a>
		</li>
		<li class="list-group-item a-holder">
			<a asp-area="@GlobalConstants.AdministrationArea" asp-controller="Resource"
			   asp-action="LessonResources" asp-route-lessonId="@Model.Id">All Resources</a>
		</li>
	</ul>
</div>
<div class="ul-holder">
	<ul class="list-group d-flex flex-xl-row">
		@foreach (var problem in Model.Problems)
		{
			<li class="list-group-item">@($"{(++problemNumber).ToString("D2")}. {problem.Name}")</li>
		}
		<li class="list-group-item a-holder">
			<a asp-area="@GlobalConstants.AdministrationArea" asp-controller="Problem"
			   asp-action="Create" asp-route-lessonId="@Model.Id">Add Task</a>
		</li>
		<li class="list-group-item a-holder">
			<a asp-area="@GlobalConstants.AdministrationArea" asp-controller="Problem"
			   asp-action="All" asp-route-lessonId="@Model.Id">All Tasks</a>
		</li>
	</ul>
</div>
<div class="code-wrapper">
	<textarea id="code-holder"></textarea>
</div>

@section Scripts{
	<script src="~/lib/codemirror/codemirror.js"></script>
	<script src="~/lib/codemirror/mode/clike/clike.min.js"></script>
	<script>
		let codeTextarea = document.getElementById('code-holder');
		var myCodeMirror = CodeMirror.fromTextArea(codeTextarea,
			{
				lineNumbers: true,
				matchBrackets: true,
				mode: "text/x-c++src"
			});
	</script>
}
