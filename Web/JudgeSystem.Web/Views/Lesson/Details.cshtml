@model LessonViewModel

@{
	this.ViewData["Title"] = Model.Name;
	int problemNumber = 0;
	var firstProblem = Model.Problems.FirstOrDefault();
	string administrationArea = GlobalConstants.AdministrationArea;
}

<h2>@Model.Name</h2>
<div class="ul-holder">
	<h4>Downlaod resources</h4>
	<ul class="list-group d-flex flex-xl-row flex-wrap">
		@foreach (var resource in Model.Resources)
		{
			<li class="list-group-item a-holder">
				<a asp-area="" asp-controller="Resource" asp-action="Download" asp-route-id="@resource.Id">@resource.Name</a>
			</li>
		}
		<li class="list-group-item a-holder">
			<a asp-area="@administrationArea" asp-controller="Resource"
			   asp-action="Create" asp-route-lessonId="@Model.Id">Add Resource</a>
		</li>
		<li class="list-group-item a-holder">
			<a asp-area="@administrationArea" asp-controller="Resource"
			   asp-action="LessonResources" asp-route-lessonId="@Model.Id">All Resources</a>
		</li>
	</ul>
</div>
<div class="ul-holder">
	<ul class="list-group d-flex flex-xl-row">
		@foreach (var problem in Model.Problems)
		{
			if (problemNumber == 0)
			{
				<li class="list-group-item active-problem problem-name" data-id="@problem.Id">@($"{(++problemNumber).ToString("D2")}. {problem.Name}")</li>
			}
			else
			{
				<li class="list-group-item problem-name" data-id="@problem.Id">@($"{(++problemNumber).ToString("D2")}. {problem.Name}")</li>
			}
		}
		<li class="list-group-item a-holder">
			<a asp-area="@administrationArea" asp-controller="Problem"
			   asp-action="Create" asp-route-lessonId="@Model.Id">Add Task</a>
		</li>
		<li class="list-group-item a-holder">
			<a asp-area="@administrationArea" asp-controller="Problem"
			   asp-action="All" asp-route-lessonId="@Model.Id">All Tasks</a>
		</li>
	</ul>

	@if (Model.Problems.Count > 0)
	{
		<h3 class="mt-2" id="problemName">01. @firstProblem.Name</h3>
		<div class="mt-3">
			<a class="btn btn-primary" id="addTestBtn" asp-area="@administrationArea"
			   asp-controller="Problem" asp-action="AddTest" asp-route-problemId="@firstProblem.Id">Add Test</a>
			<a class="btn btn-primary test-btn" id="allTestsBtn" asp-area="@administrationArea"
			   asp-controller="Test" asp-action="ProblemTests" asp-route-problemId="@firstProblem.Id">All Tests</a>
			<a class="btn btn-warning problem-btn" id="editProblemBtn" asp-area="@administrationArea"
			   asp-controller="Problem" asp-action="Edit" asp-route-id="@firstProblem.Id">Edit</a>
			<a class="btn btn-danger problem-btn" id="deleteProblemBtn" asp-area="@administrationArea"
			   asp-controller="Problem" asp-action="Delete" asp-route-id="@firstProblem.Id">Delete</a>
		</div>
	}

</div>
<div class="code-wrapper">
	<textarea name="code" id="code-holder"></textarea>
</div>
<div class="button-holder">
	<button class="btn btn-secondary" id="submit-btn">Submit</button>
</div>

<div id="submissions-holder">
</div>


@section Scripts{
	<script src="~/lib/codemirror/codemirror.js"></script>
	<script src="~/lib/codemirror/mode/clike/clike.min.js"></script>
	<script>
		let codeTextarea = document.getElementById('code-holder');
		var editor = CodeMirror.fromTextArea(codeTextarea,
			{
				lineNumbers: true,
				matchBrackets: true,
				mode: "text/x-c++src"
			});
	</script>
	<script src="~/js/notification.js"></script>
	<script src="~/js/controllers/submissionController.js"></script>
}
